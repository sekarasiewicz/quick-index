services:
  frontend-test:
    build:
      context: ./frontend
      dockerfile: Dockerfile.test
    environment:
      - NODE_ENV=test
      - CI=true
      - VITEST_WORKER_THREADS=1
      - VITEST_POOL=forks
      - VITEST_NO_THREADS=true
    command: npm run test
    ports:
      - "5174:5174" # Test UI port if needed
    networks:
      - test-network

  frontend-test-watch:
    build:
      context: ./frontend
      dockerfile: Dockerfile.test
    environment:
      - NODE_ENV=test
      - VITEST_WORKER_THREADS=1
      - VITEST_POOL=forks
      - VITEST_NO_THREADS=true
    command: npm run test:watch
    ports:
      - "5174:5174"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    tty: true
    stdin_open: true
    networks:
      - test-network

  backend-test:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - PYTHONPATH=/app
      - SERVER_PORT=${SERVER_PORT:-8000}
      - SERVER_HOST=${SERVER_HOST:-0.0.0.0}
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}
      - INPUT_FILE=${INPUT_FILE:-data/input.txt}
    command: python -m pytest tests/ -v
    networks:
      - test-network

  backend-test-watch:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - PYTHONPATH=/app
      - SERVER_PORT=${SERVER_PORT:-8000}
      - SERVER_HOST=${SERVER_HOST:-0.0.0.0}
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}
      - INPUT_FILE=${INPUT_FILE:-data/input.txt}
    command: ptw tests/ -- -v --tb=short
    volumes:
      - ./backend:/app
    tty: true
    stdin_open: true
    networks:
      - test-network

networks:
  test-network:
    driver: bridge 